from docx import Document
from docx.shared import Pt, Inches
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from io import BytesIO
from datetime import datetime

def generate_docx_report(title, summary, recommendations):
    doc = Document()

    # ✅ COVER PAGE
    doc.add_paragraph().add_run("\n" * 3)  # spacing
    title_paragraph = doc.add_paragraph()
    title_run = title_paragraph.add_run("IntelGenie Research Report")
    title_run.bold = True
    title_run.font.size = Pt(26)
    title_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    subtitle_paragraph = doc.add_paragraph()
    subtitle_run = subtitle_paragraph.add_run(f"Topic: {title}")
    subtitle_run.font.size = Pt(16)
    subtitle_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    date_paragraph = doc.add_paragraph()
    date_run = date_paragraph.add_run(f"Date: {datetime.today().strftime('%B %d, %Y')}")
    date_run.font.size = Pt(12)
    date_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    author_paragraph = doc.add_paragraph()
    author_run = author_paragraph.add_run("Generated by IntelGenie")
    author_run.italic = True
    author_paragraph.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER

    doc.add_page_break()

    # ✅ MAIN BODY

    doc.add_heading("Executive Summary", level=1)
    doc.add_paragraph(summary)

    doc.add_heading("Strategic Recommendations", level=1)
    doc.add_paragraph(recommendations)

    # ✅ Save to BytesIO buffer
    buffer = BytesIO()
    doc.save(buffer)
    buffer.seek(0)
    return buffer


